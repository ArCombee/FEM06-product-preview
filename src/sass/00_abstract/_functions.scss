@use "sass:math";

// Get Unit of a value
@function get-unit($value) {
  @return str-slice($value * 0 + "", 2, -1);
}
@function set-unit($value, $unit: rem) {
  $v: strip-unit($value);
  @debug $v;
  // @return strip-unit($value) * 1#{$unit};
}
// Strip units from number
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }
  @return $number;
}
// Round numbers
@function round($value, $digits: 1) {
  $unit: unit($value);
  $multiply: math.pow(10, $digits);
  $result: math.div(math.round(strip-unit($value) * $multiply), $multiply);
  @if ($unit != "") {
    $result: $result + #{$unit};
  }
  @return $result;
}
// Number devide by 2
@function half($value) {
  @return math.div($value, 2);
}
@function neg($value) {
  @return $value * -1;
}

// Comvert rems to PX
@function to-px($rem, $digits: 2, $px-base: 16) {
  $value: strip-unit($rem) * strip-unit($px-base);
  $value: round($value, $digits);
  @return $value * 1px;
}
//Convert px to rem
@function to-rem($px, $digits: 2, $px-base: 16) {
  $value: math.div(strip-unit($px), strip-unit($px-base));
  $value: round($value, $digits);
  @return $value * 1rem;
}

// Creates darker version of color by adding black
@function shade($color, $percentage) {
  @return adjust-color($color, $blackness: $percentage);
}
// Creates lighter version of color by adding white
@function tint($color, $percentage) {
  @return adjust-color($color, $whiteness: $percentage);
}
// Replace text
@function str-replace($string, $search, $replace: "") {
  $string: #{$string};
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}
// Calculate ideal line height
@function line-height($font-size: 16px, $line-height: 24px, $rem2px: 16) {
  $unit-fs: unit($font-size);
  $unit-lh: unit($line-height);
  $fs: strip-unit($font-size);
  $lh: strip-unit($line-height);
  @if ($unit-fs == "rem") {
    $fs: $fs * $rem2px;
  }
  @if ($unit-lh == "rem") {
    $lh: $lh * $rem2px;
  }
  @return r(math.div($lh, $fs), 3);
}
